# Generated by Django 2.2.5 on 2020-01-13 04:41

import cos_site.managers.user_manager
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('employee_id', models.IntegerField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=32)),
                ('first_name', models.CharField(blank=True, max_length=32)),
                ('maiden_name', models.CharField(blank=True, max_length=32)),
                ('last_name', models.CharField(blank=True, max_length=32)),
                ('date_tenure', models.DateField(auto_now_add=True)),
                ('role', models.CharField(choices=[('D', 'Director'), ('E', 'Employee'), ('O', 'Owner'), ('QA', 'Quality Analyst'), ('S', 'Supervisor'), ('TL', 'Team Leader')], max_length=3)),
                ('nickname', models.CharField(blank=True, max_length=32)),
                ('is_active', models.BooleanField(default=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='media/employees/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'employee',
            },
            managers=[
                ('objects', cos_site.managers.user_manager.EmployeeUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TimeRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_of_shift', models.CharField(choices=[('6AM - 5PM', '6AM - 5PM'), ('8AM - 7PM', '8AM - 7PM'), ('7PM - 6AM', '7PM - 6AM'), ('9PM - 8AM', '9PM - 8AM')], max_length=32)),
                ('employee_name', models.CharField(max_length=32)),
                ('date_of_shift', models.DateField(auto_now_add=True)),
                ('timestamp_in', models.DateTimeField(auto_now_add=True)),
                ('timestamp_out', models.DateTimeField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_record_employee', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'time_record',
            },
        ),
    ]
